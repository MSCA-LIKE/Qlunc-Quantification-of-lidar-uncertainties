# Francisco Costa GarcÃ­a
# University of Stuttgart(c) 

# Inputs file for Qlunc (Quantification lidar uncertainties). 
# Do not change definition names or vary the structure of the file!! Just change parameter values. 
# Users can find a yaml format template in the repository '/Main/Template_yaml_inputs_file.yml'


# DIRECTORIES:------------------------------------------------------

Main_directory: '.' # Directory where Qlunc_Classes.py is
Project: Gandia # Name of the project. A .nc file is created in the folder "Projects" to save the lidar object and its characteristics. Aimed to link with mocalum/yaddum

# Lidar values. Modules and components parameters: ------------------------------------------------------

Components:
#Optics: 
  Scanner:
    
    Name: Scanner_Yaml # Provide an ID to your lidar:    
    Origin: [0,0,60]  # Lidar position in meters: [x,y,z]    
    Pattern: 'lissajous' # 'lissajous', user defined pattern or 'None' in case none predefined pattern is used
    # Lissajous patterns:
    Lissajous parameters: [50,60,60,3,3] # [x_dim,y_dim,z_dim,q,p]
    Sample rate: 0   # Lidar sample rate. In meters. Use 0 for now.
    Type: VAD    # Type of the scanning head: VAD or SCAN (Scanning Lidar).
  
    # STDV in lidar angles and focus distance
    stdv focus distance: 0   # [m]
    stdv Cone angle: 0      # [deg]
    stdv Azimuth: 0         # [deg]   
   
    # VAD Pattern:
    Focus distance: [20]   # [m]
    Cone angle: [30]       # [deg]
    Azimuth: [0,360,10]     # [deg] [origin,end,steps]

    # Scanning Lidar Pattern:
    x: [-40]
    y: [0]   
    z: [0] #[10,   -10, -10 , 10 ]
        
    # Uncertainty function:
    Uncertainty function: uopc.UQ_Scanner
    
  Optical Circulator:
    Name: OC_Yaml
    Insertion loss: 0.8 # [dB]
    SNR: 60 #[dB]
    Uncertainty function: uopc.UQ_OpticalCirculator
  
  Telescope:
    Name: Telescope_YAML
    Aperture: 2.e-2 #[m]
    Stdv Aperture: 2.e-6 #[m]
    Uncertainty function: uopc.UQ_Telescope
    
# Photonics  
  Optical Amplifier: 
  
    Name: OA_Yaml
    
    # Noise figure in dB. Could be a well known value or a table.
    # If table (FigureNoise Vs Wavelength) is provided Qlunc 
    # interpolates to obtain a most accurate value according 
    # with the lidar nominal wavelength. Interpolation param. could 
    # be tunned in Qlunc_Photonics_Classes --> UQ_Optical_amplifier
    
    Optical amplifier noise figure: 1 #metadata/NoiseFigure.csv  # Relative Directory to where Noise figure data is. Either a well-known value or the directory where the file is.   
    Optical amplifier gain: 30 # Optical amplifier gain in dB
    Uncertainty function: uphc.UQ_Optical_amplifier # Python module! (You develop a function and save it as a python module)

  
  Photodetector:
    Name: Photodetector_YAML
    Photodetector BandWidth: 1.e+9    # [Hz]            
    Load resistor: 50                  # [Ohm]
    Photodetector efficiency: .85       # Photodetector efficiency [-]
    Dark current: 5.e-9                 # In [A]. Dark current in the photodetector.
    Photodetector signalP: 1.5e-3        # [W]
    Power interval: [0,1000,.001]       # [mW]
    Gain TIA: 5.e+3                     # [dB] Value or 'None' if no TIA in the photodetector
    V Noise TIA:  None # 160.e-6 #             # [V] Value or 'None' if no TIA in the photodetector
    Uncertainty function: uphc.UQ_Photodetector # Python module! (You develop a function and save it as a python module)
  
  Laser:
    Name: Laser_YAML
    Wavelength: 1550.e-9    # [m]
    Stdv Wavelength: 1.e-9 #[m]
    Confidence interval: 3 # 1 => confidence interval= 68.27%, 2 => confidence interval= 90%, 3=> confidence interval= 95% 4=> confidence interval = 95.45%, 5 => confidence interval= 99%, 6=> confidence interval= 99.73%
    Output power: 1.5e-3 #[w]
    Bandwidth: 250 # Hz
    RIN: -165 # dBc/Hz
    Uncertainty function: uphc.UQ_Laser

  AOM:
    Name: AOM_YAML
    Insertion loss: 0.5 # dB
    
# Lidar general inputs 
  Lidar general inputs:
    Name: Lidar_gral_inputs_Yaml
    Type: CW # CW/Pulsed for continuous or pulsed lidars. The difference is that AOM (photonics module) is included in calculations when Pulsed
    Wavelength: 1550.e-9    # [m]
    Yaw error: 0       # [deg]
    Pitch error: 0         # [deg]
    Roll error: 0          # [deg]
---
# Modules:
Modules:
  Optics Module:
    Name: Optics_module_Yaml
    Scanner: Scanner
    Optical circulator: Optical_circulator # Have to be the same name as the instance
    Telescope: Telescope 
    Uncertainty function: uopc.sum_unc_optics # Python module! (You develop a function and save it as a python module)
  Photonics Module:
    Name: Photonics_module_Yaml
    Photodetector: Photodetector           # Have to be the same name as the instance
    Optical amplifier: Optical_Amplifier   # Have to be the same name as the instance
    Laser: Laser
    Uncertainty function: uphc.sum_unc_photonics # Python module! (You develop a function and save it as a python module)
---  
# Lidar:
Lidar:
  Name: Caixa1
  Photonics module: Photonics_Module       # Have to be the same name as the instance
  Optics module: None #Optics_Module             # Have to be the same name as the instance
  Power module: None                       # Have to be the same name as the instance
  Lidar inputs: Lidar_inputs               # Have to be the same name as the instance
  Uncertainty function: ulc.sum_unc_lidar  # Python module! (You develop a function and save it as a python module)

---

# ATMOSPHERIC INPUTS:-----------------------------------------------
# Atmospheric_inputs to create the atmospheric scenarios

Atmospheric_inputs:
  Name: 'Atmosphere_Yaml'
  TimeSeries    : False # This defines whether we are using a time series (True) or single values (False) to describe the atmosphere characteristics (T, H, rain and fog)   
  Atmos_TS_FILE : 'AtmosphericScenarios.csv'  # (... .csv)
  Temperature: [300] # [K] Have to put the same number of elements for temperature and humidity. Always in paired values   
  Humidity: [12]     # [%] 
  Rain: true # for rain and fog intensity intervals might be introduced [none,low, medium, high]
  Fog: false
---

# Plotting:------------------------------------------------------------
Flags:
  Pointing accuracy uncertainty: False
  Scanning Pattern: True
  Photodetector noise: False
  Save Scanning Coordinates: False