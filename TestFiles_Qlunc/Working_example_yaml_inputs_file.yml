# DIRECTORIES:------------------------------------------------------
# Template for Qlunc inputs. Here we include a list of the inputs to run Qlunc (Quantification lidar uncertainties).


Main_directory: # Directory where Qlunc_Classes.py is
  '../Main'

Components:
#Optics: 
  Scanner:
    
    # Provide an ID to your lidar:
    Name: Scanner_Yaml
    
    # Lidar position in meters: [x,y,z]
    Origin: [2,1,2.5]
    
    # Lidar sample rate in meters for now (have to know the medium wind speed to put in Hz and do correct calculations) :
    Sample rate: 0
    
    # Pattern:
    Focus distance: [60]   
    Cone angle: [7] 
    Azimuth: [0,360,15]
    
    # Systematic error in the scanner pointting accuracy:
    stdv focus distance: 1
    stdv Cone angle: 0.6
    stdv Azimuth: 0.8
    
    #Uncertainty function:
    Uncertainty function: uopc.UQ_Scanner
    
  Optical Circulator:
    Name: OC_Yaml
    Insertion loss: 2.1
    Uncertainty function: uopc.UQ_OpticalCirculator
  
# Photonics  
  Optical Amplifier: 
  
    # Provide an Id to your Optical amplifier:
    Name: OA_Yaml
    
    # Noise figure in dB. Could be a well known value or a table.
    # If table, FigureNoise Vs Wavelength, is provided Qlunc 
    # interpolates to obtain a most accurate value according 
    # with the lidar nominal wavelength.
    
    Optical amplifier noise figure: ../metadata/NoiseFigure.csv 
    
    # Optical amplifier gain in dB
    Optical amplifier gain: 30
    
    # Uncertainty function quantifying the optical amplifier uncertainty
    Uncertainty function: uphc.UQ_Optical_amplifier

  
  Photodetector:
    Name: Photodetector_YAML
    Photodetector BandWidth: 380.e+6                
    Load resistor: 50
    Photodetector efficiency: .85       # Photodetector efficiency [-]
    Dark current: 5.e-9                 # In [A]. Dark current in the photodetector.
    Photodetector signalP: 1.e-3
    Power interval: [0,1000,.001]
    Gain TIA: 5.e+3                    
    V Noise TIA: 160.e-6                
    Uncertainty function: uphc.UQ_Photodetector
 
# Lidar general inputs 
  Lidar general inputs:
    Name: Lidar general inputs
    Wavelength: 1550.e-9
    Sample rate: 2
    Yaw error: 0
    Pitch error: 0
    Roll error: 0
---
# Modules:
Modules:
  Optics Module:
    Name: Optics module Yaml
    Scanner: Scanner
    Optical circulator: Optical_circulator # Have to be the same name as the instance
    Laser: None
    Uncertainty function: uopc.sum_unc_optics
  Photonics Module:
    Name: Photonics module
    Photodetector: Photodetector           # Have to be the same name as the instance
    Optical amplifier: Optical_Amplifier   # Have to be the same name as the instance
    Uncertainty function: uphc.sum_unc_photonics
---  
# Lidar:
Lidar:
  Name: Caixa1
  Photonics module: Photonics_Module       # Have to be the same name as the instance
  Optics module: Optics_Module             # Have to be the same name as the instance
  Power module: None                       # Have to be the same name as the instance
  Lidar inputs: Lidar_inputs               # Have to be the same name as the instance
  Uncertainty function: ulc.sum_unc_lidar

---

# ATMOSPHERIC INPUTS:-----------------------------------------------
# Atmospheric_inputs to create the atmospheric scenarios



Atmospheric_inputs:
  
  TimeSeries    : True # This defines whether we are using a time series (True) or single values (False) to describe the atmosphere (T, H, rain and fog)   
  Atmos_TS_FILE : 'AtmosphericScenarios.csv'  
  Temperature: 300 # [K] HAve to put the same number of elements for temperature and humidity. Always in paired values   
  Humidity: 12 # [%] 
  Rain: true # for rain and fog intensity intervals might be introduced [none,low, medium high
  Fog: false
---

# Plotting:------------------------------------------------------------
Flags:
  Pointing accuracy uncertainty: False
  Scanning Pattern: True
  Photodetector noise: True

